---
layout: post
title: 데이터의 흐름이해, 비동기 요청 처리
date: 2021-09-06 17:16:55 +0300
image: /assets/images/blog/post-5.jpg
author: hanna
tags: frontend
---

## Achievement Goals

- React 데이터 흐름을 알 수 있어야한다.
- 어떤 컴포넌트에 state가 위치하는지 알 수 있다.
- state 끌어오르기의 개념을 이해할 수 있다.
  상태 변경 함수가 정의 된 컴포넌트와 상태 변경 함수를 호출하는 컴포넌트가 다름을 알아야 한다.

# Effect Hook

- side effect가 어떤 의미인지 알 수 있다.
- React 컴포넌트를 만들 때 side effect로 부터 분리해서 생각할 수 있다.
- Effect hook 에서 dependency array 사용법을 이해할 수 있다.
- 컴포넌트 내에서 네트워크 요청시 로딩 화면과 같이 나은 ui 만드는 법을 이해할 수 있다.

## React 데이터 흐름

React의 개발 방식의 가장 큰 특징은 페이지 단위가 아닌, 컴포넌트 단위로 시작한다는 점이다.
프로토 타입에서 컴포넌트를 찾고 , 컴포넌트를 조립해 가면서 페이지를 만든다.
이는 상향식으로 만드는 방식이다. 그리고 상향식 방법은 테스트가 쉽고 확장성이 좋다는데 장점이 있다.

컴포넌트는 컴포넌트 바깥에서 props를 이용해 데이터를 마치 인자(arguments) 혹은 속성(attributes)처럼 전달받을 수 있다
즉, 데이터를 전달하는 주체는 부모 컴포넌트가 되며, 이는 데이터 흐름이 하향식이 됨을 의미한다.

단방향 데이터 흐름(one-way data flow)은 리액트를 설명하는 용어가 된다.

# 리액트에서 변하는 값과 변하지 않는 값

변하는 값 === props
변하지 않는 값 === state

모든 데이터는 상태 값으로 두지않고 상태를 최소화해야한다.
상태를 파악하는 질문을 확인해보고 상태 값인지를 구분 해야한다.

# 상태 (state)인지 확인하는 질문

1. 부모로부터 props를 통해 전달됩니까? 그러면 확실히 state가 아닙니다.
2. 시간이 지나도 변하지 않나요? 그러면 확실히 state가 아닙니다.
3. 컴포넌트 안의 다른 state나 props를 가지고 계산 가능한가요? 그렇다면 state가 아닙니다.

상태의 위치를 살펴볼 때 상태가 특정 컴포넌트에서만 유의미하다면, 특정 컴포넌트에만 두면 되니 어렵지 않지만, 만일 하나의 상태를 기반으로 두 컴포넌트가 영향을 받는다면 이 때에는 공통 소유 컴포넌트를 찾아 그 곳에 상태를 위치해야 한다.

즉, 두 개의 자식 컴포넌트가 하나의 상태에 접근하고자 할 때는 두 자식의 공통 부모 컴포넌트에 상태를 위치해야한다.

하지만 하위 컴포넌트에서 클릭 이벤트가 부모의 상태를 바꾸어야만 한다면 이는 state 끌어올리기 (Lifting state up)을 해주어야한다.

이는 상태를 변경시키는 함수 (handler)를 하위 컴포넌트에 props로 전달해서 해결할 수 있고, 이는 콜백 함수를 사용하는 방법과 비슷하다.

## State 끌어올리기 (Lifting State Up)
